@model PetStore.Models.RegisterModel
@{
    ViewBag.Title = "Register";
    Layout = "~/Views/Shared/_Layout.cshtml";
}



<!-- breadcrumbs -->
<div class="breadcrumbs">
    <div class="container">
        <ol class="breadcrumb breadcrumb1 animated wow slideInLeft" data-wow-delay=".5s">
            <li><a href="~/Home"><span class="glyphicon glyphicon-home" aria-hidden="true"></span>Home</a></li>
            <li class="active">Register Page</li>
        </ol>
    </div>
</div>
<!-- //breadcrumbs -->
<!-- register -->
@using (Html.BeginForm("Register", "Account", FormMethod.Post))
{
    @Html.AntiForgeryToken()
    <div class="form-group">
        @Html.ValidationSummary(false, "", new { @class = "text-danger" })
        @if (ViewBag.Success != null)
        {
            <div class="alert alert-success">@ViewBag.Success</div>
        }
    </div>
    <div class="register">
        <div class="container">
            <h3 class="animated wow zoomIn" data-wow-delay=".5s">Đăng ký tài khoản</h3>

            <div class="login-form-grids">
                <h5 class="animated wow slideInUp" data-wow-delay=".5s">Thông tin người dùng</h5>

                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", type = "text", placeholder = "Họ tên..." } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", type = "email", placeholder = "Email..." } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control", type = "text", placeholder = "Số điện thoại..." } })
                @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
                @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control", type = "text", placeholder = "Địa chỉ..." } })
                @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                @Html.EditorFor(model => model.NamSinh, new { htmlAttributes = new { @class = "form-control", type = "text", placeholder = "Năm sinh..." } })
                @Html.ValidationMessageFor(model => model.NamSinh, "", new { @class = "text-danger" })
                @Html.EditorFor(model => model.GioiTinh, new { htmlAttributes = new { @class = "form-control", type = "text", placeholder = "Giới tính..." } })
                @Html.ValidationMessageFor(model => model.GioiTinh, "", new { @class = "text-danger" })

                <h6 class="animated wow slideInUp" data-wow-delay=".5s">Thông tin đăng nhập</h6>

                @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control", type = "text", placeholder = "Tên đăng nhập..." } })
                @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control", type = "password", placeholder = "Password" } })
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control", type = "password", placeholder = "Password Confirmation" } })
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })

                <input type="submit" value="Đăng ký">

            </div>
            <div class="register-home animated wow slideInUp" data-wow-delay=".5s">
                <a href="~/Home">Home</a>
            </div>
        </div>
    </div>
    <!-- //register -->
}